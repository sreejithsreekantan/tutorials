// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: minidata.proto

#ifndef PROTOBUF_minidata_2eproto__INCLUDED
#define PROTOBUF_minidata_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_minidata_2eproto();
void protobuf_AssignDesc_minidata_2eproto();
void protobuf_ShutdownFile_minidata_2eproto();

class MiniData;

// ===================================================================

class MiniData : public ::google::protobuf::Message {
 public:
  MiniData();
  virtual ~MiniData();

  MiniData(const MiniData& from);

  inline MiniData& operator=(const MiniData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MiniData& default_instance();

  void Swap(MiniData* other);

  // implements Message ----------------------------------------------

  MiniData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MiniData& from);
  void MergeFrom(const MiniData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 i = 1;
  inline bool has_i() const;
  inline void clear_i();
  static const int kIFieldNumber = 1;
  inline ::google::protobuf::int32 i() const;
  inline void set_i(::google::protobuf::int32 value);

  // optional bool b = 2;
  inline bool has_b() const;
  inline void clear_b();
  static const int kBFieldNumber = 2;
  inline bool b() const;
  inline void set_b(bool value);

  // @@protoc_insertion_point(class_scope:MiniData)
 private:
  inline void set_has_i();
  inline void clear_has_i();
  inline void set_has_b();
  inline void clear_has_b();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 i_;
  bool b_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_minidata_2eproto();
  friend void protobuf_AssignDesc_minidata_2eproto();
  friend void protobuf_ShutdownFile_minidata_2eproto();

  void InitAsDefaultInstance();
  static MiniData* default_instance_;
};
// ===================================================================


// ===================================================================

// MiniData

// optional int32 i = 1;
inline bool MiniData::has_i() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MiniData::set_has_i() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MiniData::clear_has_i() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MiniData::clear_i() {
  i_ = 0;
  clear_has_i();
}
inline ::google::protobuf::int32 MiniData::i() const {
  return i_;
}
inline void MiniData::set_i(::google::protobuf::int32 value) {
  set_has_i();
  i_ = value;
}

// optional bool b = 2;
inline bool MiniData::has_b() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MiniData::set_has_b() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MiniData::clear_has_b() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MiniData::clear_b() {
  b_ = false;
  clear_has_b();
}
inline bool MiniData::b() const {
  return b_;
}
inline void MiniData::set_b(bool value) {
  set_has_b();
  b_ = value;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_minidata_2eproto__INCLUDED
