platform = ARGUMENTS.get('OS', Platform())

include_path = "#/src/"

import glob,os;
lib_path = []
for i in glob.glob("lib/*/lib"):
	lib_path.append("#"+i);


bin_path = ""
libs = []
cpp_flags="-Wall"


AddOption('--release',
	dest='release',
	action='store_true',
	help='build program for release',
	default=False
	)

env = Environment(
				CC = 'clang',
				CXX = 'clang++',
				PLATFORM = platform,
                BINDIR = bin_path,
                INCDIR = include_path,
                LIBDIR = lib_path,
                CPPPATH = [include_path],
                CPPFLAG = cpp_flags,
                LIBPATH = [lib_path],
                LIBS = libs,
                PROJ_BASE_DIR = "#")

variant_dir='build/$PLATFORM'

if GetOption('release'):
	f = env.ParseFlags('-DNDEBUG -O3 -s')
	env.MergeFlags(f)

Export('env')

env.SConscript('src/SConscript', variant_dir=variant_dir)


